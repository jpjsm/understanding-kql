.create-or-alter function with (folder = "ChangeCard", docstring = "Update ChangeCard Performance Raw Data", skipvalidation = "true") Get_ChangeCard_Performance_RawData() {
        let icmdata = cluster('fcmdata.kusto.windows.net').database('FCMKustoStore').IncidentXChangeRecordForChangeCardReadOnly
            | join hint.strategy=broadcast  kind=inner(cluster('icmcluster.kusto.windows.net').database('IcMDataWarehouse').Incidents)
                on $left.IncidentId==$right.IncidentId
            | summarize min(MitigateDate),min(ImpactStartDate),min(Severity) by IncidentId,ChangeRecordId  
            | project MitigateDate=min_MitigateDate,ImpactStartDate=min_ImpactStartDate,Severity=min_Severity,IncidentId,ChangeRecordId
        ;
        // icmdata | count;
        let icmteamdata = cluster('fcmdata.kusto.windows.net').database('FCMKustoStore').IncidentXChangeRecordForChangeCardReadOnly
            | join hint.strategy=broadcast  kind=inner(cluster('icmcluster.kusto.windows.net').database('IcMDataWarehouse').Incidents)
                on $left.IncidentId==$right.IncidentId
            |summarize arg_max(SourceModifiedDate,*) by IncidentId
            | project OwningTeamName,IncidentId
        ;
        // icmteamdata | count;
        let incidentchangelog= IncidentChangeLogV3
            | extend d=parse_json(PossibleCauses)
            | mv-expand(todynamic(d.PossibleChanges.WhatsChangedList))
            | extend d1=(parse_json(d_PossibleChanges_WhatsChangedList))
            | extend ChangeRecordId=tolong(d1.ChangeRecordId),RelevanceRank=toint(d1.RelevanceRank)
            | summarize min(TimeStamp),percentile(RelevanceRank,95) by IncidentId,ChangeRecordId
            | project ChangeShownTime=min_TimeStamp,RelevanceRank=percentile_RelevanceRank_95,IncidentId,ChangeRecordId
        ;
        // incidentchangelog | count; 
        let summary=icmdata
        | join kind=inner (icmteamdata) on $left.IncidentId==$right.IncidentId
        | join kind=inner (incidentchangelog) on $left.IncidentId==$right.IncidentId and $left.ChangeRecordId==$right.ChangeRecordId
        ;
        // summary | count;
        summary
        |where ImpactStartDate>datetime(2020-01-01)
        |extend M = Get_AzureSemesterMilestone(ImpactStartDate, 'EM')
        |project  IncidentId
                 ,M
                 ,ImpactStartDate
                 ,OwningTeamName
                 ,ChangeRecordId
                 ,RelevanceRank
                 ,TimeTakentoShowchange=datetime_diff('minute',ChangeShownTime,ImpactStartDate)
                 ,TimeTakentoMitigate=datetime_diff('minute',MitigateDate,ImpactStartDate)
                 ,BeforeorAfterMitigation=case(MitigateDate<ChangeShownTime or  isempty(MitigateDate),'AfterMitigation','BeforeMitigation')
                 ,OKRStatus=case((MitigateDate>ChangeShownTime or  isempty(MitigateDate))and RelevanceRank<=5,'MeetsOKR','NotMeetsOKR')
        |order by ImpactStartDate,OwningTeamName
    } 